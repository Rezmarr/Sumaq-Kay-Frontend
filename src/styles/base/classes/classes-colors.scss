@use '../../tokens/tokens-colors.scss' as tColors;

@mixin color-classes($name, $color) {
  .background-#{$name} {
    background-color: $color;
  }

  .text-#{$name} {
    color: $color;
  }

  .border-#{$name} {
    border-color: $color !important;
    border-style: solid;
    border-width: 1px;
  }

  .border-bottom-#{$name} {
    border-bottom: 1px solid $color;
  }
}

// PRIMARIES
@include color-classes('primary-1', tColors.$color-primary-1);
@include color-classes('primary-2', tColors.$color-primary-2);
@include color-classes('primary-3', tColors.$color-primary-3);
// SEMANTICS
@include color-classes('success-soft', tColors.$color-success-soft);
@include color-classes('success-medium', tColors.$color-success-medium);
@include color-classes('success-hard', tColors.$color-success-hard);
@include color-classes('warning-soft', tColors.$color-warning-soft);
@include color-classes('warning-medium', tColors.$color-warning-medium);
@include color-classes('warning-hard', tColors.$color-warning-hard);
@include color-classes('error-soft', tColors.$color-error-soft);
@include color-classes('error-medium', tColors.$color-error-medium);
@include color-classes('error-hard', tColors.$color-error-hard);

// NEUTRALS
@include color-classes('base', tColors.$color-base);
@include color-classes('disabled', tColors.$color-disabled);
@include color-classes('subordinate', tColors.$color-subordinate);
@include color-classes('inverse', tColors.$color-inverse);